name: Deploy to Amazon Elastic Container

on:
  push:
    branches:
      - staging
      - production

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    env:
      STAGING_ECR_REPOSITORY: es-ems-fe-staging           # set this to your Amazon ECR repository name
      PRODUCTION_ECR_REPOSITORY: es-ems-fe-production
      STAGING_ECS_SERVICE: es-ems-fe-staging
      PRODUCTION_ECS_SERVICE: es-ems-fe-prd	  # set this to your Amazon ECS service name
      STAGING_ECS_CLUSTER: es-ems-staging                # set this to your Amazon ECS cluster name
      PRODUCTION_ECS_CLUSTER: es-ems-prod
      ECR_REGISTRY: 204476358176.dkr.ecr.eu-west-2.amazonaws.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_EB_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_EB_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_EB_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR for staging
        if: github.ref == 'refs/heads/staging'
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$STAGING_ECR_REPOSITORY .
          docker push $ECR_REGISTRY/$STAGING_ECR_REPOSITORY
          echo "image=$ECR_REGISTRY/$STAGING_ECR_REPOSITORY" >> $GITHUB_OUTPUT

      - name: Build, tag, and push image to Amazon ECR for production
        if: github.ref == 'refs/heads/production'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$PRODUCTION_ECR_REPOSITORY .
          docker push $ECR_REGISTRY/$PRODUCTION_ECR_REPOSITORY
          echo "image=$ECR_REGISTRY/$PRODUCTION_ECR_REPOSITORY" >> $GITHUB_OUTPUT

      - name: Deploy image to staging
        if: github.ref == 'refs/heads/staging'
        run: |
          aws ecs update-service --cluster ${{ env.STAGING_ECS_CLUSTER }} --service ${{ env.STAGING_ECS_SERVICE }} --force-new-deployment
      
      - name: Deploy image to production
        if: github.ref == 'refs/heads/production'
        run: |
          aws ecs update-service --cluster ${{ env.PRODUCTION_ECS_CLUSTER }} --service ${{ env.PRODUCTION_ECS_SERVICE }} --force-new-deployment
